<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
       default-lazy-init="true">

    <description>Shiro Configuration</description>

    <!-- 自定义退出路径 -->
    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/api/login/logout_success"/>
    </bean>
    <!-- 安全认证过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/api/login/loginAgain"/>
        <property name="unauthorizedUrl" value="/api/login/unauthorized_err"/>
        <property name="filterChainDefinitions">
            <value>
                <!--对静态资源设置匿名访问-->
                <!--/images/**=anon
                /js/**=anon
                /style/**=anon-->
                <!--swagger相关配置不拦截-->
                <!--/swagger-ui.html=anon
                /swagger-resources=anon
                /v2/api-docs=anon
                /webjars/** = anon
                /swagger/**=anon
                /configuration/**=anon-->
                <!--druid连接池不拦截-->
                <!--/druid = anon-->
                /api/login/verifycode = anon
                /api/login/channellogin = anon
                /api/login/managelogin = anon
                /api/login/logout_success = anon
                /api/logout = logout
                <!--/**=anon 表示所有的url都可以匿名访问，anon是shiro中一个过滤器的简写,authc表示拦截-->
                /api/** = authc
            </value>
        </property>
        <property name="filters">
            <map>
                <!--定义登出过滤器的重定向url-->
                <entry key="logout" value-ref="logout" />
            </map>
        </property>
    </bean>

    <!-- 配置Shiro安全管理配置 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm"/>
        <property name="cacheManager" ref="redisCacheManager"/>
        <property name="sessionManager" ref="redisSessionManager"/>
    </bean>

    <!--开启aop对类的代理-->
    <aop:config proxy-target-class="true"></aop:config>
    <!--开启shiro注解支持-->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"></property>
    </bean>
    <!--自定义凭证匹配器-->
    <bean id="myCredentialsMatcher" class="com.rjwl.api.security.MyHashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"></property>
        <property name="hashIterations" value="3"></property>
    </bean>

    <!--配置自定义realm-->
    <bean id="myRealm" class="com.rjwl.api.security.MyRealm">
        <!--配置凭证匹配器-->
        <!--<property name="credentialsMatcher" ref="credentialsMatcher"/>-->
        <property name="credentialsMatcher" ref="myCredentialsMatcher"/>
        <property name="adminService" ref="adminServiceImpl"/>
        <property name="menuService" ref="menuServiceImpl"/>
    </bean>
    <!--自定义RedisCacheManager-->
    <bean id="redisCacheManager" class="com.rjwl.api.security.RedisCacheManager">
        <!--Authorization cache过期时间 单位s-->
        <property name="timeout" value="1800"/>
    </bean>

    <!--redis来管理session-->
    <bean id="redisSessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="redisSessionDAO"/>
        <property name="sessionIdCookie" ref="shareSession"/>
        <property name="sessionIdUrlRewritingEnabled" value="false"/>
        <!--删除失效session-->
        <property name="deleteInvalidSessions" value="true"/>
        <!--超时ms-->
        <property name="globalSessionTimeout" value="1800000"/>
        <!-- 定时检查失效的session -->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <!--隔多久检查一次失效的session-->
        <property name="sessionValidationInterval" value="900000"/>
    </bean>

    <!--自定义redisSessionDAO-->
    <bean id="redisSessionDAO" class="com.rjwl.api.security.RedisSessionDao">
        <constructor-arg ref="stringRedisTemplate"/>
        <property name="sessionIdGenerator">
            <bean class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
        </property>
    </bean>
    <!--sessionIdCookie的实现，用于重写覆盖容器默认的JSESSIONID-->
    <bean id="shareSession" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="SHAREJSESSIONID"/>
        <property name="path" value="/"/>
        <!-- 浏览器关闭session失效，不计入cookie -->
        <property name="maxAge" value="-1"/>
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>
